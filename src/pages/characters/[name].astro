---
import type { GetStaticPaths } from "astro";
import MainLayout from "../../layouts/MainLayout.astro";
import { getCharactersList } from "../../service/characters";
import {
  getImageUrl,
  getNameLink,
  getUniqueNameTrannsition,
} from "../../utils";
import FavoriteBtn from "@/components/FavoriteBtn/FavoriteBtn.astro";

// Para generar las rutas dinamicas, se usa getStaticPaths para definir las rutas permitidas segun el param
// el resto de las rutas no se generaran y mostraran un 404
export const getStaticPaths = (async () => {
  const data = await getCharactersList();
  const characters = data.data.results;

  const paths = characters.map(({ name, thumbnail, description, id }) => {
    return {
      params: { name: getNameLink(name) },
      props: {
        id,
        nameCharacter: name,
        thumbnail,
        description: description || "No description available",
      },
    };
  });

  return paths;
}) satisfies GetStaticPaths;

const { name } = Astro.params;
const { nameCharacter, thumbnail, description, id } = Astro.props;
---

<MainLayout
  title="Character Details"
  description={description}
  image={getImageUrl(thumbnail.path, thumbnail.extension)}
>
  <section class="">
    <button
      class="text-blue-500 hover:underline mb-4 inline-block"
      onclick="history.back()"
    >
      Regresar
    </button>
    <div class="flex flex-row align-center items-center gap-4 mb-4">
      <FavoriteBtn name={nameCharacter} id={id} />

      <h1 class="text-3xl font-bold">
        Character Details: {nameCharacter}
      </h1>
    </div>

    <img
      src={`${getImageUrl(thumbnail.path, thumbnail.extension)}`}
      alt={nameCharacter}
      class={"w-full object-cover rounded-lg mb-2 mx-auto"}
      transition:name={getUniqueNameTrannsition(nameCharacter)}
    />

    <p class="text-gray-700">
      {Astro.props.description}
    </p>
  </section>
</MainLayout>
