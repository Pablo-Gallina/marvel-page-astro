---
import {
  getImageUrl,
  getNameLink,
  getUniqueNameTrannsition,
} from "../../utils";

interface Props {
  name: string;
  thumbnail: {
    path: string;
    extension: string;
  };
}
const { name, thumbnail } = Astro.props;
const nameLink = getNameLink(name);

const rotations = ["rotate-2", "-rotate-2", "rotate-0"];
// Escoge aleatoriamente uno de los tres valores
const randomRotation = rotations[Math.floor(Math.random() * rotations.length)];

const borderOptions = [
  { borderClass: "border-yellow-400", glowClass: "shadow-yellow-400/75" },
  { borderClass: "border-blue-400", glowClass: "shadow-blue-400/75" },
  { borderClass: "border-red-400", glowClass: "shadow-red-400/75" },
];

const randomBorder =
  borderOptions[Math.floor(Math.random() * borderOptions.length)];
---

<a
  class={`transform ${randomRotation} inline-block`}
  href={`/characters/${nameLink}`}
  title={name}
>
  <img
    src={`${getImageUrl(thumbnail.path, thumbnail.extension)}`}
    alt={name}
    class={`
      w-48 h-52 object-cover rounded-lg mb-2 mx-auto
      border-4 ${randomBorder.borderClass}
      shadow-lg ${randomBorder.glowClass}
      hover:scale-105 transition-transform duration-300
      hover:shadow-xl hover:${randomBorder.glowClass}
      hover:border-4 hover:${randomBorder.borderClass}
      hover:rotate-3
      hover:transition-transform hover:duration-300
      hover:ease-in-out
    `}
    transition:name={getUniqueNameTrannsition(name)}
  />
  <h2 class="uppercase text-center">{name}</h2>
</a>
